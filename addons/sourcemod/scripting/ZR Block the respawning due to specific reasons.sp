/* Plugin Template generated by Pawn Studio */

#include <sdktools>
#include <sourcemod>
#include <sdkhooks>
#include <cstrike>
#include <zombiereloaded>

public Plugin:myinfo = {
	name = "[ZR] Block the respawning due to specific reasons",
	author = "[CNSR] FJH_03",
	description = "Block the respawning of human due to specific reasons",
	version = "1.5",
	url = "<- URL ->"
}

bool IsKilledByWorld[MAXPLAYERS+1 + 1] = {false};
bool IsRandomKillByZombie[MAXPLAYERS+1 + 1] = {false};
bool IsKilledByHeadshot[MAXPLAYERS+1 + 1] = {false};
bool ConfirmZombieAppear;


public OnPluginStart(){
	HookEvent("round_end", RoundEnd2, EventHookMode_Post);
	HookEvent("player_death", Event_PlayerDeath4, EventHookMode_Pre);
	HookEvent("round_start", RoundStart, EventHookMode_Post);
}

public void RoundStart(Handle hEvent, char[] chEvent, bool bDontBroadcast)
{
    ConfirmZombieAppear = false;
}

public Action OnPlayerRunCmd(int client, int &buttons, int &impulse, float vel[3], float angles[3], int &weapon, int &subtype, int &cmdnum, int &tickcount, int &seed, int mouse[2])
{
	if (IsClient(client, true)) {
		if (ZR_IsClientZombie(client)) {
			ConfirmZombieAppear = true;
		}
	}
	
	return Plugin_Continue; // 继续处理命令
}


public OnMapStart()
{	
	for(new i = 0; i < 65; i++)
	{
		IsKilledByWorld[i] = false;
		IsRandomKillByZombie[i] = false;
		IsKilledByHeadshot[i] = false;
	}
}


public void RoundEnd2(Handle:event,const String:name[],bool:dontBroadcast)
{
	for(new i = 0; i < 65; i++)
	{
		IsKilledByWorld[i] = false;
		IsRandomKillByZombie[i] = false;
		IsKilledByHeadshot[i] = false;
	}
}


// 玩家死亡函数
public Action:Event_PlayerDeath4(Handle:event, const String:name[], bool:dontBroadcast)
{
	if (ConfirmZombieAppear) {
		new victim = GetClientOfUserId(GetEventInt(event, "userid"));
		new attacker = GetEventInt(event, "attacker");
		new bool:headshot = GetEventBool(event, "headshot");
		
		if (attacker == 0) {
			if (GetClientTeam(victim) == CS_TEAM_CT) {
				IsKilledByWorld[victim] = true;
				PrintToChat(victim, "\x01\x03[\x04阻塞重生功能\x03]\x01 作为人类，你死于外界！");
			}
		} else {
			new attackerId = GetClientOfUserId(attacker);
			
			new randomNum = GetRandomInt(1, 10);
			if (IsPlayerAlive(attackerId) && ZR_IsClientZombie(attackerId) && GetClientTeam(victim) != GetClientTeam(attackerId)) {
				if (randomNum > 3) {
					PrintToChat(attackerId, "\x01\x03[\x04重生功能\x03]\x01 作为僵尸，你感染了 %N！", victim);
					PrintToChat(victim, "\x01\x03[\x04重生功能\x03]\x01 作为人类，你被丧尸感染！");
				} else {
					IsRandomKillByZombie[victim] = true;
					PrintToChat(attackerId, "\x01\x03[\x04阻塞重生功能\x03]\x01 作为僵尸，你杀死了 %N！", victim);
					PrintToChat(victim, "\x01\x03[\x04阻塞重生功能\x03]\x01 作为人类，你被丧尸杀死！");
				}
			}
			
			if (headshot == true && GetClientTeam(victim) == CS_TEAM_CT && GetClientTeam(victim) == GetClientTeam(attackerId)) {
				PrintToChat(attackerId, "\x01\x03[\x04阻塞重生功能\x03]\x01 作为人类，你爆头击杀了你的队友 %N！", victim);
				PrintToChat(victim, "\x01\x03[\x04阻塞重生功能\x03]\x01 作为人类，你被队友爆头击杀！");
				IsKilledByHeadshot[victim] = true;
			}
		}
	}
	
	return Plugin_Continue; // 继续处理命令
}


public Action ZR_OnClientRespawn(int &client, ZR_RespawnCondition &condition)
{
	if(IsKilledByWorld[client] == true || IsRandomKillByZombie[client] == true || IsKilledByHeadshot[client] == true)
	{
		return Plugin_Handled;
	}
	
	return Plugin_Continue;
}

//检测玩家属性函数
bool:IsClient(Client, bool:Alive)
{
	return Client <= MaxClients && IsClientConnected(Client) && IsClientInGame(Client) && (Alive && IsPlayerAlive(Client));
}