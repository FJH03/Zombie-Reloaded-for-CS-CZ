/* Plugin Template generated by Pawn Studio */

#include <sdktools>
#include <sourcemod>
#include <sdkhooks>
#include <cstrike>
#include <zombiereloaded>
// #include "zr/class.zr"

static int PlayerSex[64] = {0};    //存储回合开始时的玩家性别

public Plugin:myinfo = {
	name = "[ZR] Sound Complement",
	author = "[CNSR] FJH_03",
	description = "<- Description ->",
	version = "1.3",
	url = "<- URL ->"
}

bool ConfirmZombieAppear;


public OnPluginStart()
{
	HookEvent("player_death", ZombieDeath, EventHookMode_Pre);
    HookEvent("player_hurt", ZombieHurt); 
    HookEvent("player_team", HumanInfected, EventHookMode_Post);
	HookEvent("round_start", RoundStart, EventHookMode_Post);
	HookEvent("round_end", RoundEnd, EventHookMode_Post);
}

public void RoundStart(Handle hEvent, char[] chEvent, bool bDontBroadcast)
{
	CreateTimer(10.0, GetPlayerSex);
    ConfirmZombieAppear = false;
}

public void RoundEnd(Handle hEvent, char[] chEvent, bool bDontBroadcast)
{
    ConfirmZombieAppear = false;
}

public OnMapStart(){
	PrecacheSound("npc/fast_zombie/human_death_01.wav");
	PrecacheSound("npc/fast_zombie/human_death_female_01.wav");
	PrecacheSound("npc/fast_zombie/human_death_female_02.wav");
	PrecacheSound("npc/complement/zombi_death_2.wav");
	PrecacheSound("npc/complement/zombi_hurt_01.wav");
	PrecacheSound("npc/complement/zombi_hurt_02.wav");
	PrecacheSound("npc/complement/zombi_death_female_1.wav");
	PrecacheSound("npc/complement/zombi_death_female_2.wav");
	PrecacheSound("npc/complement/zombi_hurt_female_1.wav");
}
	
public Action OnPlayerRunCmd(int client, int &buttons, int &impulse, float vel[3], float angles[3], int &weapon, int &subtype, int &cmdnum, int &tickcount, int &seed, int mouse[2])
{
	if (IsClient(client, true)) {
		if (ZR_IsClientZombie(client)) {
			ConfirmZombieAppear = true;
		}
	}
	
	return Plugin_Continue; // 继续处理命令
}

public ZombieDeath(Handle:event,const String:name[],bool:dontBroadcast)
{
	if (ConfirmZombieAppear) {
		new client_id = GetEventInt(event, "userid")
		new client = GetClientOfUserId(client_id);
		new attacker_id = GetEventInt(event, "attacker")
		new attacker = GetClientOfUserId(attacker_id);
		if(client != attacker && GetClientTeam(client) == CS_TEAM_T)     //排除通过Bot_Kill指令杀死bot的情况
		{
			//PrintToChatAll("僵尸死亡！");
			decl String:ModelStr[64];
			GetClientModel(client, ModelStr, sizeof(ModelStr));
			//PrintToChatAll("死亡：%s", ModelStr);
			//僵尸死亡时播放叫声
			if(StrEqual(ModelStr, "models/player/zh/zh_corpse002.mdl"))
			{
				switch(GetRandomInt(1,2))
				{
					case 1: EmitSoundToAll("npc/complement/zombi_death_female_1.wav", client, SNDCHAN_AUTO, _, _, 1.0);
					case 2: EmitSoundToAll("npc/complement/zombi_death_female_2.wav", client, SNDCHAN_AUTO, _, _, 1.0);
				}
			}
			else
				EmitSoundToAll("npc/complement/zombi_death_2.wav", client, SNDCHAN_AUTO, _, _, 1.0);
		}
	}
	
}

public ZombieHurt(Handle:event,const String:name[],bool:dontBroadcast)
{
	new client_id = GetEventInt(event, "userid")
	new client = GetClientOfUserId(client_id);
	if (ZR_IsClientZombie(client))    //当玩家是僵尸时
	{
		//PrintToChatAll("僵尸受伤！");
		decl String:ModelStr[64];
        GetClientModel(client, ModelStr, sizeof(ModelStr));
		TrimString(ModelStr);
		//僵尸受伤时播放呻吟声
		if(StrEqual(ModelStr, "models/player/zh/zh_corpse002.mdl"))
			EmitSoundToAll("npc/complement/zombi_hurt_female_1.wav", client, SNDCHAN_VOICE, _, _, 1.0);
		else
		{
			switch(GetRandomInt(1,2))
		    {
			    case 1: EmitSoundToAll("npc/complement/zombi_hurt_01.wav", client, SNDCHAN_VOICE, _, _, 1.0);
			    case 2: EmitSoundToAll("npc/complement/zombi_hurt_02.wav", client, SNDCHAN_VOICE, _, _, 1.0);
		    }
		}
	}
}

public HumanInfected(Handle:event,const String:name[],bool:dontBroadcast)
{
	new client_id = GetEventInt(event, "userid");
	new client = GetClientOfUserId(client_id);
	new team_id = GetEventInt(event, "team")
	decl String:TeamStr[32];
    GetTeamName(team_id, TeamStr, sizeof(TeamStr));
	if(StrEqual(TeamStr, "TERRORIST"))
	{
		CreateTimer(0.2, PlayInfectedSound, client);
	}   	
}

public Action:PlayInfectedSound(Handle timer, int client)
{
	decl String:ModelStr[64];
	if (IsClient(client, true)) {
		GetClientModel(client, ModelStr, sizeof(ModelStr));
		
		if(IsPlayerAlive(client) && ZR_IsClientZombie(client))
		{
			// PrintToChatAll("变僵尸！");
			// 玩家被感染时播放惨叫声
			if(PlayerSex[client] == 2)
			{
				
				switch(GetRandomInt(1,2))
				{
					case 1: EmitSoundToAll("npc/fast_zombie/human_death_female_01.wav", client, SNDCHAN_VOICE, _, _, 1.0);
					case 2: EmitSoundToAll("npc/fast_zombie/human_death_female_02.wav", client, SNDCHAN_VOICE, _, _, 1.0);
				}
				
				new randomNum = GetRandomInt(1, 10);
				if (randomNum > 7) {
					SetEntityModel(client, "models/player/zh/zh_corpse002.mdl");
					float tempNum = GetEntPropFloat(client, Prop_Data, "m_flLaggedMovementValue");
					if (tempNum < 1.33)
						SetEntPropFloat(client, Prop_Data, "m_flLaggedMovementValue", 1.34); 
					SetEntityHealth(client, 1000);
				}
			}
			else
			{
				EmitSoundToAll("npc/fast_zombie/human_death_01.wav", client, SNDCHAN_VOICE, _, _, 1.0);
			}
		}
	}
    
}

//检测玩家属性函数
bool:IsClient(Client, bool:Alive)
{
	return Client <= MaxClients && IsClientConnected(Client) && IsClientInGame(Client) && (Alive && IsPlayerAlive(Client));
}

public Action:GetPlayerSex(Handle timer)
{
	for(int i = 1; i <= MaxClients; i++) 
	{
        if(IsClient(i, true))
		{
			decl String:ModelStr[64];
            GetClientModel(i, ModelStr, sizeof(ModelStr));
	        if(StrEqual(ModelStr, "models/player/ct_vip_female3.mdl") || StrEqual(ModelStr, "models/player/t_vip_female4.mdl") || StrEqual(ModelStr, "models/player/ct_private_female.mdl"))
			{
				PlayerSex[i] = 2;    //女
			}
			else
				PlayerSex[i] = 1;    //男
		}
	}
}